{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/word.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".header{\\n    background-color: #04192E;\\n    display: block;\\n    padding: 2%;\\n    color:white;\\n    font-size: 26px;\\n    margin-bottom: 0%;\\n    margin-top: 0%;\\n}\\n\\n.myUL {\\n    list-style-type: none;\\n    padding: 0;\\n    margin: 0;\\n  }\\n\\n.myUL li a {\\n    border: 1px solid #ddd;\\n    margin-top: -1px; /* Prevent double borders */\\n    background-color: #f6f6f6;\\n    padding: 6px;\\n    text-decoration: none;\\n    font-size: 18px;\\n    color: black;\\n    display: block;\\n    cursor: pointer;\\n  }\\n\\n.header1{\\n    margin-top: 2%;\\n    margin-bottom: 0%;\\n  }\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n    <div class=\\\"container-fluid header\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <a style=\\\"color:white;\\\">My Dicitionary Application</a>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <form #searchForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\n                    <div >\\n                        <input  type=\\\"text\\\" name=\\\"WordDescription\\\" (input)=\\\"showSuggestion()\\\"\\n                         [(ngModel)]=\\\"WordDescription\\\" #title=\\\"ngModel\\\" class=\\\"form-control\\\"\\n                            placeholder=\\\"Search word...\\\" required>\\n\\n                        <div *ngIf=\\\"suggestionArray.length>0\\\">\\n                            <ul  class=\\\"myUL\\\">\\n                                <li (click)=\\\"selectValue(items)\\\" *ngFor=\\\"let items of suggestionArray\\\">\\n                                    <a>{{items}}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n\\n                </form>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-default\\\"  (click)=\\\"wordSearch()\\\">Search</button>\\n            </div>\\n        </div>\\n\\n       \\n    </div>\\n</div>\\n\\n\\n\\n    <div *ngIf=\\\"word\\\">\\n        <app-search [Sentence]=\\\"result\\\" [word]=\\\"word\\\"  ></app-search>\\n    </div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { WordService } from './word.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private wordsService: WordService,\n    private _route: ActivatedRoute,\n    private router: Router) {\n  }\n\n\n  public WordDescription: string;\n  public currentWord: any = [];\n  public word: any=[];\n  suggestionArray: string[] = [];\n  public currentWord1: any = [];\n  public synonimsWord: any = [];\n  public antonimsWord: any = [];\n  result: any;\n\n  ngOnit() {\n  }\n\n  public wordSearch(): any {\n    this.wordSearch1();\n    this.wordSearch2();\n    this.wordSearch3();\n    this.wordSearch4();\n    this.suggestionArray = [];\n    this.result = {};\n    this.word=[];\n  }\n\n  public wordSearch1(): any {\n    let word_id = this.WordDescription;\n    this.wordsService.searchWord1(word_id).subscribe(\n      data => {\n        this.currentWord = data.results[0];\n        this.word = this.currentWord.word;\n        // console.log(this.word);\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n\n\n  public wordSearch2(): any {\n    let word_id = this.WordDescription;\n    this.wordsService.searchWord2(word_id).subscribe(\n      data => {\n        this.currentWord1 = data.results[0].lexicalEntries[0].sentences;\n        this.result['sentence'] = this.currentWord1;\n        //  console.log(this.currentWord1);\n        setTimeout(() => {\n          this.router.navigate(['/search'])\n        }, 1000)\n      },\n      error => {\n        console.log(error);\n      }\n    )\n\n  }\n\n\n  public wordSearch3(): any {\n    let word_id = this.WordDescription;\n    this.wordsService.searchWord3(word_id).subscribe(\n      data => {\n        this.synonimsWord = data.results[0].lexicalEntries[0].entries[0].senses[0].synonyms;\n        this.result['synonym'] = this.synonimsWord;\n      },\n\n      error => {\n        console.log(error);\n      }\n    )\n\n  }\n\n  public wordSearch4(): any {\n\n    let word_id = this.WordDescription;\n    this.wordsService.searchWord4(word_id).subscribe(\n      data => {\n        this.antonimsWord = data.results[0].lexicalEntries[0].entries[0].senses[0].antonyms;\n        //  console.log(this.antonimsWord);\n        this.result['antonym'] = this.antonimsWord;\n      },\n\n      error => {\n        console.log(error);\n      }\n    )\n\n  }\n\n\n  showSuggestion() {\n    if (this.WordDescription.length >= 3) {\n      this.wordsService.searchWord1(this.WordDescription).subscribe(\n        data => {\n          this.suggestionArray.length = 0;\n          if (data.results) {\n            data.results.map(item => {\n              this.suggestionArray.push(item.word);\n            })\n          }\n          // console.log(this.suggestionArray,123)\n        },\n        error => {\n          console.log(error);\n        }\n      )\n    }\n    else this.suggestionArray.length = 0;\n  }\n\n  selectValue(value) {\n\n    this.WordDescription = value;\n    this.suggestionArray = [];\n\n  }\n\n\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RouterModule,Routes } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './search/search.component';\nimport { WordService } from './word.service';\n\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n     {path:'search',component:SearchComponent},\n     {path : 'home',component:AppComponent}\n    ]),\n  ],\n  providers: [WordService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" >\\n\\n <div class=\\\"row\\\" *ngIf=\\\"word\\\">\\n        <div class=\\\"col-lg-12 col-sm-12 col-md-12\\\">\\n            <table class=\\\"table table-striped table-dark\\\" style=\\\"width: 100%\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\">Sentences</th>\\n                        <th scope=\\\"col\\\">Synonyms</th>\\n                        <th scope=\\\"col\\\">Antonyms</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr style=\\\"height: auto\\\">\\n                        <td style=\\\"width: 50%\\\">\\n                            <tr *ngFor=\\\"let sentence of result.sentence\\\">{{ sentence.text }}</tr>\\n                        </td>\\n                        <td style=\\\"width: 25%\\\">\\n                            <tr *ngFor=\\\"let synonym of result.synonym\\\">{{ synonym.text }}</tr>\\n                        </td>\\n                        <td style=\\\"width: 25%\\\">\\n                            <tr *ngFor=\\\"let antonym of result.antonym\\\">{{ antonym.text }}</tr>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit,OnChanges, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n\n  @Input() Sentence: any = [];\n  @Input() word: any = [];\n  public result: any;\n  public Word :any\n\n  constructor() { }\n\n  ngOnInit() {\n    this.result = this.Sentence;\n  \n  }\n\n  ngOnChanges(){\n    this.result = this.Sentence;  \n  }\n}\n\n\n\n","import {Injectable} from '@angular/core';\nimport {Headers} from '@angular/http';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nimport {Observable} from 'rxjs';\n// import {map} from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WordService {\n\n  public app_id = '1e166b52';\n  public app_key = 'd9d6caa8dd39cadd9c001ed14e71a3a9';\n\n\n  constructor(private _http: HttpClient) { }\n\n  \n\n  public searchWord1(word_id): any {\n\n    var headers = new HttpHeaders().set('Accept', 'application/json')\n      .set('app_id', this.app_id)\n      .set('app_key', this.app_key);\n    var word = this._http.get('/api/v1/search/en/translations=es?q=' + word_id.toLowerCase() + '&prefix=false',\n      {headers: headers})\n    return word;\n\n  }\n\n  public searchWord2(word_id): any {\n    var headers = new HttpHeaders().set('Accept', 'application/json')\n      .set('app_id', this.app_id)\n      .set('app_key', this.app_key);\n    var sentences = this._http.get('/api/v1/entries/en/' + word_id.toLowerCase() + '/sentences', {headers: headers})\n    return sentences;\n  }\n\n\n  public searchWord3(word_id): any {\n    var headers = new HttpHeaders().set('Accept', 'application/json')\n      .set('app_id', this.app_id)\n      .set('app_key', this.app_key);\n    var synonyms = this._http.get('/api/v1/entries/en/' + word_id.toLowerCase() + '/synonyms', {headers: headers})\n    return synonyms;\n  }\n\n\n  public searchWord4(word_id): any {\n    var headers = new HttpHeaders().set('Accept', 'application/json')\n      .set('app_id', this.app_id)\n      .set('app_key', this.app_key);\n    var antonyms = this._http.get('/api/v1/entries/en/' + word_id.toLowerCase() + '/antonyms', {headers: headers})\n    return antonyms;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}